{"version":3,"sources":["components/ProtectedRoute.js","components/Register.js","components/Login.js","images/header__logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/api.js","utils/auth.js","images/tooltip-icon_succeed.svg","images/tooltip-icon_failed.svg","components/InfoTooltip.js","components/App.js","utils/constants.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","Component","component","props","loggedIn","to","Register","React","useState","email","password","userData","setUserData","handleChangeData","e","target","name","value","className","onSubmit","preventDefault","onRegister","type","onChange","placeholder","required","Login","data","onLogin","Header","href","rel","src","headerLogo","alt","exact","path","onClick","Footer","year","Date","getFullYear","CurrentUserContext","createContext","Card","currentUser","useContext","cardDeleteButtonClassName","owner","_id","cardLikeButtonClassName","likes","some","like","link","onCardClick","aria-label","onCardDelete","onCardLike","length","Main","id","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","card","PopupWithForm","isOpen","title","noValidate","children","submit","onClose","EditProfilePopup","setName","description","setDescription","useEffect","undefined","onUpdateUser","minLength","maxLength","EditAvatarPopup","userAvatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","setLink","ImagePopup","api","baseUrl","headers","this","_baseUrl","_headers","respond","ok","json","Promise","reject","Error","status","fetch","then","res","_checkApiRespond","method","body","JSON","stringify","cardId","url","isLiked","authorization","auth","token","InfoTooltip","isSucceed","popupIconSucceed","popupIconFailed","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","isRegistrationSucceed","setIsRegistrationSucceed","setCards","selectedCard","setSelectedCard","setCurrentUser","setLoggedIn","userEmail","setUserEmail","newUserData","setNewUserData","history","useHistory","handleEscClose","evt","key","closeAllPopups","document","removeEventListener","getUserData","catch","err","console","log","getInitialCards","initialCards","localStorage","getItem","jwt","checkToken","message","tokenCheck","push","Provider","removeItem","addEventListener","i","changeLikeCardStatus","newCard","c","deleteMyCard","filter","register","login","setItem","userInputs","editUserData","userInput","editUserAvatar","addNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dc114c7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n    </Route>\r\n)}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n\r\n  const [userData, setUserData] = React.useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  function handleChangeData(e) {\r\n    const {name, value} = e.target;\r\n\r\n    setUserData({\r\n      ...userData,\r\n      //Важно! для использования конструкции ниже необходимо чтоб названия ключей из стейт-переменной совпадали со значениями name, указанными в инпутах\r\n      [name]: value \r\n    })\r\n  }\r\n  \r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    props.onRegister(userData)\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <p className=\"login__title\">Регистрация</p>\r\n        <form onSubmit={handleSubmit} className=\"login__form\">\r\n          <fieldset className=\"login__input-container\">\r\n            <input \r\n              type=\"email\" \r\n              className=\"login__text login__text_type_email\" \r\n              name=\"email\" \r\n              value={userData.email} \r\n              onChange={handleChangeData} \r\n              placeholder='Email'\r\n              required\r\n            /> \r\n            <input \r\n              type=\"password\" \r\n              className=\"login__text login__text_type_password\" \r\n              name=\"password\" \r\n              value={userData.password} \r\n              onChange={handleChangeData} \r\n              placeholder='Пароль'\r\n              required\r\n            />\r\n          </fieldset>\r\n          <button className=\"login__submit\" type=\"submit\">Зарегистрироваться</button>\r\n        </form>\r\n\r\n        <p className='login__redirection-text'>Уже зарегистрированы?\r\n          <Link to=\"/signin\" className=\"login__link\"> Войти</Link>\r\n        </p>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nfunction Login(props) {\r\n    const [userData, setUserData] = React.useState({\r\n      email: props.data.email,\r\n      password: props.data.password,\r\n    });\r\n\r\n    function handleChangeData(e) {\r\n      const {name, value} = e.target;\r\n\r\n        setUserData({\r\n            ...userData,\r\n            [name]: value \r\n        })\r\n    }\r\n\r\n    function handleSubmit(e){\r\n      e.preventDefault();\r\n\r\n      props.onLogin(userData)\r\n    }\r\n\r\n  return(\r\n    <div className=\"login\">\r\n      <p className=\"login__title\">Вход</p>\r\n      <form onSubmit={handleSubmit} className=\"login__form\">\r\n        <fieldset className=\"login__input-container\">\r\n          <input \r\n            type=\"email\" \r\n            className=\"login__text login__text_type_email\" \r\n            name=\"email\" \r\n            value={userData.email} \r\n            onChange={handleChangeData} \r\n            placeholder='Email'\r\n            required\r\n          /> \r\n          <input \r\n            type=\"password\" \r\n            className=\"login__text login__text_type_password\" \r\n            name=\"password\" \r\n            value={userData.password} \r\n            onChange={handleChangeData} \r\n            placeholder='Пароль'\r\n            required\r\n          />\r\n        </fieldset>\r\n        <button className=\"login__submit\" type=\"submit\">Войти</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/header__logo.bbe2a6ea.svg\";","import headerLogo from '../images/header__logo.svg';\r\nimport React from 'react';\r\nimport {Link, Route, Redirect, Switch} from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className='header'>\r\n            <a href=\"#\" className=\"header__link\" target=\"_blank\" rel=\"noopener\">\r\n                <img className=\"header__logo\" src={headerLogo} alt=\"Логотип Место.Россия\"/>\r\n            </a>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <div className='header__container'>\r\n                        <p className='header__text'>{props.email}</p>\r\n                        <Link to='/signin' onClick={props.onClick} className=\"header__text header__nav-link\">Выйти</Link>\r\n                    </div>\r\n                </Route> \r\n                   \r\n                <Route path=\"/signup\">\r\n                    <Link to='/signin' className=\"header__text header__nav-link\">Войти</Link>\r\n                </Route>\r\n                \r\n                <Route path=\"/signin\">\r\n                    <Link to='/signup' className=\"header__text header__nav-link\">Регистрация</Link>\r\n                </Route>\r\n\r\n                <Route>\r\n                    {props.loggedIn ? <Redirect exact to=\"/\" /> : <Redirect to=\"/signin\" />}\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","function Footer() {\r\n    let year = new Date();\r\n\r\n    return (\r\n        <div className='footer'>\r\n            <p className=\"footer__copyright\">&copy; {year.getFullYear()} Mesto Russia</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'\r\n\r\nfunction Card(props) {\r\n    \r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = isOwn? 'place__trash-button' : 'place__trash-button place__trash-button_hidden'; \r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.likes.some(like => like._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = isLiked? 'place__like-button place__like-button_active' : 'place__like-button'; \r\n\r\n    // Передаем id карточки в App через Main\r\n    function handleClick() {\r\n        props.onCardClick(props);\r\n    }\r\n\r\n    // Передаем id карточки в App через Main\r\n   function handleLikeClick() {\r\n        props.onCardLike(props);\r\n    }\r\n\r\n    // Передаем id карточки в App через Main\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props);\r\n    }\r\n    \r\n    return (\r\n        <li className=\"place\">\r\n            <img className=\"place__image\" src={props.link} alt={props.name} onClick={handleClick} />\r\n            <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить место\" onClick={handleDeleteClick} />\r\n            <div className=\"place__title-container\">\r\n                <h2 className=\"place__title\">{props.name}</h2>\r\n                <div className=\"place__like-container\">\r\n                    <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Поставить лайк\" onClick={handleLikeClick} />\r\n                    <h3 className=\"place__like-counter\">{props.likes.length}</h3>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return ( \r\n        <main>\r\n        <section className=\"profile\">\r\n            <div className=\"profile__container\">\r\n                <button \r\n                    className=\"profile__edit-image\" \r\n                    type=\"button\" id=\"edit-image\" \r\n                    aria-label=\"Изменить аватар\" \r\n                    onClick={props.onEditAvatar}\r\n                > \r\n                    <img className=\"profile__image\" src={currentUser.avatar} alt={currentUser.name} /> \r\n                </button> \r\n                <div className=\"profile__name-container\">\r\n                    <h1 className=\"profile__name\">{currentUser.name}</h1> \r\n                    <button \r\n                        className=\"profile__edit-button\" \r\n                        type=\"button\" id=\"edit-button\" \r\n                        aria-label=\"Изменить информацио о себе\" \r\n                        onClick={props.onEditProfile}\r\n                    /> \r\n                </div> \r\n                <p className=\"profile__job\">{currentUser.about}</p> \r\n            </div> \r\n            <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить новое место\" onClick={props.onAddPlace} /> \r\n        </section>\r\n        <section className=\"places\">\r\n            <ul className=\"places__container\"> \r\n                {props.cards.map((card) => ( \r\n                    <Card \r\n                        key={card._id} \r\n                        {...card} \r\n                        onCardClick={props.onCardClick} \r\n                        onCardDelete={props.onCardDelete} \r\n                        onCardLike={props.onCardLike} \r\n                    />\r\n                ))} \r\n            </ul> \r\n        </section> \r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__flex-container\">\r\n                <div className=\"popup__container\">\r\n                    <h2 className=\"popup__title\">{props.title}</h2>\r\n                    <form \r\n                        onSubmit={props.onSubmit} \r\n                        className={`popup__form popup__form_type_${props.name} edit-button-form`} \r\n                        name={`popup__form_type_${props.name}`} \r\n                        noValidate\r\n                    >\r\n                        <fieldset className=\"popup__input-container\">\r\n                            {props.children}\r\n                        </fieldset>\r\n                        <button className=\"popup__submit\" type=\"submit\">{props.submit}</button>\r\n                    </form>\r\n                </div>\r\n                <button className=\"popup__close-button\" type=\"button\" aria-label=\"Закрыть модальное окно\" onClick={props.onClose} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    // Реализация очистки полей формы при открытии\r\n    React.useEffect(() => {\r\n        // Проверяем, чтоб данные пользователя не были undefined, иначе ругается консоль\r\n        currentUser.name !== undefined && setName(currentUser.name);\r\n        currentUser.about !== undefined && setDescription(currentUser.about);\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({ name, about: description });\r\n    }\r\n\r\n    return ( \r\n        <PopupWithForm \r\n            name='edit-form'\r\n            title='Редактировать профиль'\r\n            onClose={props.onClose}\r\n            submit='Сохранить'\r\n            isOpen={props.isOpen}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input \r\n                type=\"text\"\r\n                className=\"popup__text popup__text_type_name\"\r\n                id=\"name-input\"\r\n                name=\"userName\"\r\n                value={name}\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                onChange={handleChangeName}\r\n                required\r\n            /> \r\n            <span className=\"popup__input-error name-input-error\">Вы пропустили это поле.</span> \r\n            <input \r\n                type=\"text\"\r\n                className=\"popup__text popup__text_type_job\"\r\n                id=\"status-input\"\r\n                name=\"userStatus\"\r\n                value={description}\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n                onChange={handleChangeDescription}\r\n                required\r\n            />\r\n            <span className=\"popup__input-error status-input-error\">Вы пропустили это поле.</span> \r\n        </PopupWithForm>\r\n    )\r\n};\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const userAvatarRef = React.useRef();\r\n\r\n    // Реализация очистки полей формы при открытии\r\n    React.useEffect(() => {\r\n        userAvatarRef.current.value = '';\r\n    }, [props.isOpen]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar(userAvatarRef.current.value);\r\n    }\r\n\r\n    return ( \r\n        <PopupWithForm \r\n            name='edit-image' \r\n            title='Обновить аватар' \r\n            onClose={props.onClose}\r\n            submit='Сохранить' \r\n            isOpen={props.isOpen} \r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input \r\n                type=\"url\" \r\n                ref={userAvatarRef} \r\n                className=\"popup__text popup__text_type_avatar-url\" \r\n                id=\"url-avatar-input\" \r\n                name=\"avatar-link\"\r\n                placeholder=\"Ссылка на новый аватар\" \r\n                required \r\n            />\r\n            <span className=\"popup__input-error url-avatar-input-error\">Введите адрес сайта.</span> \r\n        </PopupWithForm>\r\n    )\r\n};\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n\r\n    // Реализация очистки полей формы при открытии\r\n    React.useEffect(() => {\r\n        setName('');\r\n        setLink('');\r\n    }, [props.isOpen]);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeLink(e) {\r\n        setLink(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onAddPlace({ name, link });\r\n    }\r\n\r\n    return ( \r\n        <PopupWithForm \r\n            name='add-card' \r\n            title='Новое место' \r\n            onClose ={props.onClose} \r\n            submit='Создать' \r\n            isOpen={props.isOpen} \r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input \r\n                type=\"text\" \r\n                className=\"popup__text popup__text_type_place\" \r\n                id=\"place-input\" \r\n                name=\"name\" \r\n                placeholder=\"Название\"\r\n                value={name} \r\n                onChange={handleChangeName}\r\n                minLength=\"2\" \r\n                maxLength=\"30\" \r\n                required \r\n            />\r\n            <span className=\"popup__input-error place-input-error\">Вы пропустили это поле.</span> \r\n            <input \r\n                type=\"url\" \r\n                className=\"popup__text popup__text_type_place-url\" \r\n                id=\"url-input\" \r\n                name=\"link\" \r\n                placeholder=\"Ссылка на картинку\"\r\n                value={link} \r\n                onChange={handleChangeLink}\r\n                required \r\n            />\r\n            <span className=\"popup__input-error url-input-error\">Введите адрес сайта.</span> \r\n        </PopupWithForm>\r\n    )\r\n};\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n\r\n    return (\r\n        <div className={`popup popup_type_show-image ${props.card && 'popup_opened'}`}>\r\n            <div className=\"popup__flex-container\">\r\n                <figure className=\"popup__image-container\">\r\n                    <img className=\"popup__image\" src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''} />\r\n                    <figcaption className=\"popup__caption\">{props.card ? props.card.name : ''}</figcaption>\r\n                </figure>\r\n                <button className=\"popup__close-button\" type=\"button\" aria-label=\"Свернуть изображение\" onClick={props.onClose} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    //проверка ответа сервера\r\n    _checkApiRespond(respond) {\r\n        if (respond.ok) {\r\n            return respond.json()\r\n        }\r\n        return Promise.reject(new Error(`Ошибка! Статус-код:${respond.status}`));\r\n    }\r\n\r\n    //получить массив исходных карточек (GET)\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n                headers: this._headers\r\n            })\r\n            .then(res => this._checkApiRespond(res))\r\n    };\r\n\r\n    //добавить собственную карточку (POST)\r\n    addNewCard(data) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n                method: 'POST',\r\n                headers: this._headers,\r\n                body: JSON.stringify({\r\n                    name: data.name,\r\n                    link: data.link\r\n                })\r\n            })\r\n            .then(res => this._checkApiRespond(res))\r\n    }\r\n\r\n    //удалить карточку (DELETE)\r\n    deleteMyCard(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n                method: 'DELETE',\r\n                headers: this._headers\r\n            })\r\n            .then(res => this._checkApiRespond(res))\r\n    }\r\n\r\n    //получить данные пользователя (GET)\r\n    getUserData() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n                headers: this._headers\r\n            })\r\n            .then(res => this._checkApiRespond(res))\r\n    }\r\n\r\n    //изменить данные пользователя (PATCH)\r\n    editUserData(data) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n                method: 'PATCH',\r\n                headers: this._headers,\r\n                body: JSON.stringify({\r\n                    name: data.name,\r\n                    about: data.about\r\n                })\r\n            })\r\n            .then(res => this._checkApiRespond(res))\r\n    }\r\n\r\n    //изменить аватар (PATCH)\r\n    editUserAvatar(url) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n                method: 'PATCH',\r\n                headers: this._headers,\r\n                body: JSON.stringify({\r\n                    avatar: url,\r\n                })\r\n            })\r\n            .then(res => this._checkApiRespond(res))\r\n    }\r\n\r\n    //поставить и убрать лайк\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: isLiked ? 'DELETE' : 'PUT',\r\n            headers: this._headers,\r\n        })\r\n        .then(res => this._checkApiRespond(res))    \r\n    }\r\n\r\n    // getAllData() {\r\n    //     return Promise.all([this.getUserData(), this.getInitialCards()])\r\n    // }\r\n}\r\n\r\nexport const api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\r\n    headers: {\r\n        authorization: '9156915b-5169-4dc0-a8af-5bc1618bd83d',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});","class Auth {\r\n    constructor(baseUrl) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }\r\n\r\n    //проверка ответа сервера\r\n    _checkApiRespond(respond) {\r\n        if (respond.ok) {\r\n            return respond.json()\r\n        }\r\n        return Promise.reject(new Error(`Ошибка! Статус-код:${respond.status}`));\r\n    }\r\n\r\n    // Регистрация нового пользователя\r\n    register(password, email) {\r\n        return fetch(`${this._baseUrl}/signup`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify(password, email)\r\n        })\r\n        .then(res => this._checkApiRespond(res))\r\n    };\r\n     \r\n    // Получение токена\r\n    login(password, email) {\r\n        return fetch(`${this._baseUrl}/signin`, {\r\n          method: 'POST',\r\n          headers: this._headers,\r\n          body: JSON.stringify(password, email)\r\n        })\r\n        .then(res => this._checkApiRespond(res))\r\n    };\r\n      \r\n    // Проверка токена и получение информации о пользователе\r\n    checkToken(token) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n          method: 'GET',\r\n          headers: {\r\n            ...this._headers,\r\n            'Authorization': `Bearer ${token}`\r\n           }\r\n        })\r\n        .then(res => this._checkApiRespond(res))\r\n    }\r\n}\r\n\r\nexport const auth = new Auth('https://auth.nomoreparties.co');","export default __webpack_public_path__ + \"static/media/tooltip-icon_succeed.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/tooltip-icon_failed.df8eddf6.svg\";","import React from 'react';\r\nimport popupIconSucceed from '../images/tooltip-icon_succeed.svg';\r\nimport popupIconFailed from '../images/tooltip-icon_failed.svg';\r\n\r\n\r\nfunction InfoTooltip(props) {\r\n    return (\r\n        <div className={`popup popup_type_info-tooltip ${props.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__flex-container\">\r\n                <div className=\"popup__container\">\r\n                    <img className='popup__icon' src={props.isSucceed ? popupIconSucceed : popupIconFailed} alt={props.title} />\r\n                    <h2 className=\"popup__title popup__title_type_tooltip\">\r\n                        {props.isSucceed ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}\r\n                    </h2>  \r\n                </div>\r\n                <button className=\"popup__close-button\" type=\"button\" aria-label=\"Закрыть модальное окно\" onClick={props.onClose} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import { ESC } from '../utils/constants.js';\nimport React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ImagePopup from './ImagePopup.js';\nimport { api } from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { auth } from '../utils/auth.js';\nimport InfoTooltip from './InfoTooltip.js';\n\nfunction App() {\n    //стейт-переменные для открытия и закрытия попапов\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = React.useState(false);\n    const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n    const [isRegistrationSucceed, setIsRegistrationSucceed] = React.useState(true);\n \n    //стейт-переменные для обновления данных карточки и пользователя\n    const [cards, setCards] = React.useState([]);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    //стейт-переменные для регистрации и логина\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [userEmail, setUserEmail] = React.useState(null);\n    const [newUserData, setNewUserData] = React.useState({});\n\n    let history = useHistory();\n\n    //получение данных пользователя с сервера\n    React.useEffect(() => {\n        api.getUserData()\n            .then((userData) => {\n                setCurrentUser(userData);\n            })\n            .catch((err) => {\n                console.log('Ошибка при загрузке юзердата', err)\n            });\n    }, []);\n\n    //получение данных карточек с сервера\n    React.useEffect(() => {\n        api.getInitialCards()\n            .then((initialCards) => {\n                setCards(initialCards);\n            })\n            .catch((err) => {\n                console.log('Ошибка при загрузке массива карточек', err)\n            });\n    }, []);\n\n    //проверка наличия токена в локальном хранилище при первой загрузке сайта\n    React.useEffect(() => {\n        tokenCheck();\n    }, []);\n\n    //переадресация на главную страницу при каждом верном введении данных\n    React.useEffect(() => {\n        if (loggedIn) {\n            history.push('/')\n        }\n    }, [loggedIn]);\n\n\n    //функции открытия попапов\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n        document.addEventListener(\"keydown\", handleEscClose);\n    };\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n        document.addEventListener(\"keydown\", handleEscClose);\n    };\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n        document.addEventListener(\"keydown\", handleEscClose);\n    };\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        document.addEventListener(\"keydown\", handleEscClose);\n    };\n\n\n    //Действия с карточками\n    function handleCardLike(card) {\n        // Проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, isLiked)\n            .then((newCard) => {\n                setCards((cards) => \n                    cards.map((c) =>\n                        c._id === card._id ? newCard : c\n                    )\n                )\n            })\n    };\n\n    function handleCardDelete(card) {\n        api.deleteMyCard(card._id)\n            .then(() => {\n                setCards((cards) =>\n                    cards.filter((c) =>\n                        c._id !== card._id\n                    )\n                )\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log('Ошибка при удалении карточки', err)\n            });     \n    };\n\n    // попап для подтверждения удаления карточки\n    // function handleDeleteCard() {\n    //     setIsConfirmationPopupOpen(true);\n    //     document.addEventListener(\"keydown\", handleEscClose);\n    // }\n\n    // Функции обновления данных пользователя (информация о себе и аватар)\n    function handleUpdateUser(userInputs) {\n        api.editUserData(userInputs)\n            .then((userData) => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(\"Ошибка при обновлении юзердата\", err)\n            });\n    };\n\n    function handleUpdateAvatar(userInput) {\n        api.editUserAvatar(userInput)\n            .then(() => {\n                setCurrentUser({...currentUser, avatar: userInput });\n            })\n            .catch((err) => {\n                console.log('Ошибка при обновлении аватара', err)\n            });\n        closeAllPopups();\n    };\n\n    // Функция добавления новой карточки\n    function handleAddPlaceSubmit(newCard) {\n        api.addNewCard(newCard)\n            .then((res) => {\n                setCards([res, ...cards])\n            })\n            .catch((err) => {\n                console.log('Ошибка при загрузке новой карточки', err)\n            });\n        closeAllPopups();\n    };\n\n\n    //Функции реализации регистрации и авторизации\n    function handleRegister(data){\n        return auth.register(data)\n        .then(() => {\n            setIsInfoTooltipPopupOpen(true);\n            setIsRegistrationSucceed(true);\n            setNewUserData(data)\n        })\n        .catch((err) => {\n            setIsInfoTooltipPopupOpen(true);\n            document.addEventListener(\"keydown\", handleEscClose);\n            setIsRegistrationSucceed(false);\n            console.log('Ошибка при регистрации нового пользователя', err.message)\n        });\n        \n    };\n\n    function handleLogin(data) {\n        return auth.login(data)\n        .then((res) => {\n            setLoggedIn(true);\n            setUserEmail(data.email);\n            localStorage.setItem('jwt', res.token)         \n        })\n        .then(() => {\n            history.push('/');\n            setNewUserData({});\n        })\n        .catch((err) => {\n            console.log('Ошибка при входе', err.message)\n        });\n    };\n\n    function tokenCheck() {\n        if (localStorage.getItem('jwt')){\n            const jwt = localStorage.getItem('jwt');\n            auth.checkToken(jwt)\n                .then((res) => {\n                        setUserEmail(res.data.email);\n                        setLoggedIn(true)\n                })\n                .catch((err) => {\n                    console.log('Ошибка при сохранении данных нового пользователя', err.message)\n                });\n        }\n    };\n\n    function handleSignOut() {\n        localStorage.removeItem('jwt');\n        setLoggedIn(false)\n        history.push('/login');\n    };\n    \n    // Функции закрытия попапов\n    function handleEscClose(evt) {\n        if (evt.key === ESC) {\n            closeAllPopups();\n        }\n    };\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsConfirmationPopupOpen(false);\n        setIsInfoTooltipPopupOpen(false);\n        setSelectedCard(null);\n        document.removeEventListener(\"keydown\", handleEscClose);\n    };\n\n    function handleCloseTooltip() {\n        closeAllPopups();\n        if (isRegistrationSucceed) {\n            history.push(\"/signin\");\n        }\n        closeAllPopups();\n    };\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header loggedIn={loggedIn} onClick={handleSignOut} email={userEmail} />\n            <Switch>\n                <ProtectedRoute \n                    exact path=\"/\" \n                    loggedIn={loggedIn}\n                    component={Main}\n                        cards={cards}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        //кнопка для подтверждения удаления карточки\n                        //onDelete={handleDeleteCard}\n                />\n                <Route path=\"/signup\">\n                    <Register onRegister={handleRegister} />\n                    <InfoTooltip isSucceed={isRegistrationSucceed} isOpen={isInfoTooltipPopupOpen} onClose={handleCloseTooltip} />\n                </Route>\n                <Route path=\"/signin\">\n                    <Login onLogin={handleLogin} data={newUserData} />\n                </Route>\n                <Route>\n                    {loggedIn ? <Redirect exact to=\"/\" /> : <Redirect to=\"/signin\" />}\n                </Route>\n            </Switch>\n            <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />  \n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />  \n            <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />  \n            <PopupWithForm \n                name='confirm'\n                title='Вы уверены?'\n                onClose={closeAllPopups}\n                submit='Да'\n                isOpen={isConfirmationPopupOpen}\n            /> \n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />  \n            <Footer />\n        </CurrentUserContext.Provider> \n\n    )\n};\n\nexport default App;","export const ESC = \"Escape\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(( \n    <StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter> \n    </StrictMode>\n    ), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}